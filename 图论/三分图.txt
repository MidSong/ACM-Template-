//https://codeforces.ml/contest/1228/problem/D
#include<bits/stdc++.h>
#include<unordered_map>
using namespace std;

#define sc scanf
#define ls rt << 1
#define rs ls | 1
#define Min(x, y) x = min(x, y)
#define Max(x, y) x = max(x, y)
#define ALL(x) (x).begin(),(x).end()
#define SZ(x) ((int)(x).size())
#define pir pair <int, int>
#define MK(x, y) make_pair(x, y)
#define MEM(x, b) memset(x, b, sizeof(x))
#define MPY(x, b) memcpy(x, b, sizeof(x))
#define lowbit(x) ((x) & -(x))
#define P2(x) ((x) * (x))

typedef long long ll;
const int Mod = 1e9 + 7;
const int N = 1e5 + 100;
const int INF = 0x3f3f3f3f;
const ll LINF = 0x3f3f3f3f3f3f3f3f;
inline ll dpow(ll a, ll b){ ll r = 1, t = a; while (b){ if (b & 1)r = (r*t) % Mod; b >>= 1; t = (t*t) % Mod; }return r; }
inline ll fpow(ll a, ll b){ ll r = 1, t = a; while (b){ if (b & 1)r = (r*t); b >>= 1; t = (t*t); }return r; }

vector <int> G[N << 1];
int c[N];

int main()
{
	int n, m;
	cin >> n >> m;
	for (int i = 1; i <= n; i++)
		c[i] = 1;
	for (int i = 0; i < m; i++) {
		int u, v;
		sc("%d %d", &u, &v);
		if (u > v)
			swap(u, v);
		G[u].push_back(v);
	}
	int mx = 1;
	for (int i = 1; i <= n; i++) {
		for (auto v : G[i]) {
			if (c[i] == c[v])
				c[v]++, Max(mx, c[v]);
		}
	}
	int c1 = 0, c2 = 0, c3 = 0;
	for (int i = 1; i <= n; i++) {
		if (c[i] == 1)
			c1++;
		else if (c[i] == 2)
			c2++;
		else
			c3++;
	}
	if (mx != 3 || c1 * c2 + c2 * c3 + c1 * c3 != m)
		printf("-1\n");
	else {
		for (int i = 1; i <= n; i++)
			printf("%d ", c[i]);
		printf("\n");
	}
	return 0;  // 改数组大小!!!用pair记得改宏定义!!!
}