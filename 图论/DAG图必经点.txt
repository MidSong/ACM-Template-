vector <int> G[N], ans;
int in[N], dp[N], n;
int dep[N];
bool vis[N];

void topsort() {
	queue <int> q;
	int now = 0;
	for (int i = 1; i <= n; i++) {
		dp[i] = 1;
		if (!in[i])
			q.push(i), now++, vis[i] = true;
	}
	while (!q.empty()) {
		int u = q.front();
		q.pop();
		if (dp[u] == now && !vis[now])
			ans.push_back(now);
		for (auto v : G[u]) {
			in[v]--;
			if (!in[v])
				q.push(v), now++;
			dp[v] += dp[u];
		}
	}
}