ll fac[N], inv[N], n, m;
ll pow_mod(ll a, ll b) {
	ll res = 1;
	while (b) {
		if (b & 1) res = (res % MOD) * (a % MOD) % MOD;
		a = (a % MOD) * (a % MOD) % MOD;
		b >>= 1;
	}
	return res % MOD;
}
ll Cc(ll a, ll b) {
	if (b == 0 || a < b) return 0;
	return fac[a] * inv[b] % MOD * inv[a - b] % MOD;
}


int main()
{
	fac[0] = inv[0] = 1;
	for (int i = 1; i < N; i++) {
		fac[i] = fac[i - 1] * i % MOD;
		inv[i] = pow_mod(fac[i], MOD - 2);
	}
	while (cin >> n >> m) cout << Cc(n, m) << endl;
	return 0;
}