vector <int> G[N], r[N];
int f[N][20], dep[N], n;
int in[N], ans[N];
int top[N], cnt;

int LCA(int x, int y) {
	if (dep[x] > dep[y])
		swap(x, y);
	for (int i = 17; i >= 0; i--) {
		if (dep[y] - (1 << i) >= dep[x])
			y = f[y][i];
	}
	if (x == y)
		return x;
	for (int i = 17; i >= 0; i--) {
		if (f[x][i] == f[y][i])
			continue;
		x = f[x][i], y = f[y][i];
	}
	return f[x][0];
}
void topsort() {
	queue <int> q;
	for (int i = 1; i <= n; i++) {
		if (!in[i])
			q.push(i);
	}
	while (!q.empty()) {
		int u = q.front();
		q.pop();
		top[++cnt] = u;
		if (r[u].empty())
			f[u][0] = 0;
		else {
			int lca = r[u][0];
			for (auto v : r[u])
				lca = LCA(lca, v);
			f[u][0] = lca;
		}
		dep[u] = dep[f[u][0]] + 1;
		for (int i = 1; (1 << i) <= dep[u]; i++)
			f[u][i] = f[f[u][i - 1]][i - 1];
		for (auto v : G[u]) {
			if (!--in[v])
				q.push(v);
		}
	}
}

int main()
{
	cin >> n;
	for (int i = 1; i <= n; i++) {
		int u;
		while (sc("%d", &u) && u) {
			G[u].push_back(i), r[i].push_back(u);
			in[i]++;
		}
	}
	topsort();
	for (int i = n; i >= 1; i--) {
		int u = top[i];
		int fa = f[u][0];
		ans[u]++;
		ans[fa] += ans[u];
	}
	for (int i = 1; i <= n; i++)
		printf("%d\n", ans[i] - 1);
	return 0;  // 改数组大小!!!用pair记得改宏定义!!!
}