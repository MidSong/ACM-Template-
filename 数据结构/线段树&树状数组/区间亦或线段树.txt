//https://codeforces.ml/contest/242/problem/E
#include<bits/stdc++.h>
#include<unordered_map>
using namespace std;

#define sc scanf
#define ls rt << 1
#define rs ls | 1
#define Min(x, y) x = min(x, y)
#define Max(x, y) x = max(x, y)
#define ALL(x) (x).begin(),(x).end()
#define SZ(x) ((int)(x).size())
#define pir pair <int, int>
#define MK(x, y) make_pair(x, y)
#define MEM(x, b) memset(x, b, sizeof(x))
#define MPY(x, b) memcpy(x, b, sizeof(x))
#define lowbit(x) ((x) & -(x))
#define P2(x) ((x) * (x))

typedef long long ll;
const int Mod = 1e9 + 7;
const int N = 1e5 + 100;
const int INF = 0x3f3f3f3f;
const ll LINF = 0x3f3f3f3f3f3f3f3f;
inline ll dpow(ll a, ll b){ ll r = 1, t = a; while (b){ if (b & 1)r = (r*t) % Mod; b >>= 1; t = (t*t) % Mod; }return r; }
inline ll fpow(ll a, ll b){ ll r = 1, t = a; while (b){ if (b & 1)r = (r*t); b >>= 1; t = (t*t); }return r; }

int wt[21][N * 4], a[N];
bool lzy[21][N * 4];

void Pushup(int rt) {
	for (int i = 0; i <= 20; i++)
		wt[i][rt] = wt[i][ls] + wt[i][rs];
}
void Build(int rt, int L, int R) {
	if (L == R) {
		for (int i = 0; i <= 20; i++) {
			if ((a[L] >> i) & 1)
				wt[i][rt] = 1;
		}
		return;
	}
	int mid = (L + R) >> 1;
	Build(ls, L, mid);
	Build(rs, mid + 1, R);
	Pushup(rt);
}
void Pushdown(int rt, int Len) {
	int Llen = Len - (Len >> 1);
	int Rlen = Len >> 1;
	for (int i = 0; i <= 20; i++) {
		if (lzy[i][rt]) {
			wt[i][ls] = Llen - wt[i][ls];
			wt[i][rs] = Rlen - wt[i][rs];
			
			lzy[i][ls] = !lzy[i][ls];
			lzy[i][rs] = !lzy[i][rs];
			
			lzy[i][rt] = false;
		}
	}
}
void Update(int rt, int L, int R, int l, int r, int w) {
    int Len = R - L + 1;
	if (L >= l && R <= r) {
		for (int i = 0; i <= 20; i++) {
			if ((w >> i) & 1) {
				wt[i][rt] = Len - wt[i][rt];
				lzy[i][rt] = !lzy[i][rt]; 
			}
		}
		return;
	}
	Pushdown(rt, Len);
	int mid = (L + R) >> 1;
	if (mid >= l)
		Update(ls, L, mid, l, r, w);
	if (mid < r)
		Update(rs, mid + 1, R, l, r, w);
	Pushup(rt);
}
ll Ask(int rt, int L, int R, int l, int r) {
	if (L >= l && R <= r) {
		ll sum = 0;
		for (int i = 0; i <= 20; i++) 
			sum += fpow(2ll, (ll)i) * wt[i][rt];
		return sum;
	}
	Pushdown(rt, R - L + 1);
	int mid = (L + R) >> 1;
	ll tot = 0;
	if (mid >= l)
		tot = Ask(ls, L, mid, l, r);
	if (mid < r)
		tot += Ask(rs, mid + 1, R, l, r);
	return tot;
}

int main()
{
	int n;
	cin >> n;
	for (int i = 1; i <= n; i++)
		sc("%d", &a[i]);
	Build(1, 1, n);

	int q;
	cin >> q;
	while (q--) {
		int op, x, y, w;
		sc("%d", &op);
		if (op == 1) {
			sc("%d %d", &x, &y);
			printf("%lld\n", Ask(1, 1, n, x, y));
		}
		else {
			sc("%d %d %d", &x, &y, &w);
			Update(1, 1, n, x, y, w);
		}
	}
	return 0;  // 改数组大小!!!用pair记得改宏定义!!!
}